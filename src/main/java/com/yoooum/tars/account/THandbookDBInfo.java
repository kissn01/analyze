// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.account;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class THandbookDBInfo {

	@TarsStructProperty(order = 0, isRequire = false)
	public java.util.List<java.lang.Short> vecactivepet = null;
	@TarsStructProperty(order = 1, isRequire = false)
	public java.util.Map<java.lang.Short, java.lang.Byte> mhandbookdb = null;

	public java.util.List<java.lang.Short> getVecactivepet() {
		return vecactivepet;
	}

	public void setVecactivepet(java.util.List<java.lang.Short> vecactivepet) {
		this.vecactivepet = vecactivepet;
	}

	public java.util.Map<java.lang.Short, java.lang.Byte> getMhandbookdb() {
		return mhandbookdb;
	}

	public void setMhandbookdb(java.util.Map<java.lang.Short, java.lang.Byte> mhandbookdb) {
		this.mhandbookdb = mhandbookdb;
	}

	public THandbookDBInfo() {
	}

	public THandbookDBInfo(java.util.List<java.lang.Short> vecactivepet, java.util.Map<java.lang.Short, java.lang.Byte> mhandbookdb) {
		this.vecactivepet = vecactivepet;
		this.mhandbookdb = mhandbookdb;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(vecactivepet);
		result = prime * result + TarsUtil.hashCode(mhandbookdb);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof THandbookDBInfo)) {
			return false;
		}
		THandbookDBInfo other = (THandbookDBInfo) obj;
		return (
			TarsUtil.equals(vecactivepet, other.vecactivepet) &&
			TarsUtil.equals(mhandbookdb, other.mhandbookdb) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		if (null != vecactivepet) {
			_os.write(vecactivepet, 0);
		}
		if (null != mhandbookdb) {
			_os.write(mhandbookdb, 1);
		}
	}

	static java.util.List<java.lang.Short> cache_vecactivepet;
	static { 
		cache_vecactivepet = new java.util.ArrayList<java.lang.Short>();
		short var_81 = (short)0;
		cache_vecactivepet.add(var_81);
	}
	static java.util.Map<java.lang.Short, java.lang.Byte> cache_mhandbookdb;
	static { 
		cache_mhandbookdb = new java.util.HashMap<java.lang.Short, java.lang.Byte>();
		short var_82 = (short)0;
		byte var_83 = (byte)0;
		cache_mhandbookdb.put(var_82 ,var_83);
	}

	public void readFrom(TarsInputStream _is) {
		this.vecactivepet = (java.util.List<java.lang.Short>) _is.read(cache_vecactivepet, 0, false);
		this.mhandbookdb = (java.util.Map<java.lang.Short, java.lang.Byte>) _is.read(cache_mhandbookdb, 1, false);
	}

}
