// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.account;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TTaskStatusDb {

	@TarsStructProperty(order = 0, isRequire = true)
	public int itaskid = 0;
	@TarsStructProperty(order = 1, isRequire = true)
	public long laccepttime = 0L;
	@TarsStructProperty(order = 2, isRequire = true)
	public short ntaskstate = (short)0;
	@TarsStructProperty(order = 3, isRequire = true)
	public java.util.Map<java.lang.Integer, java.lang.Integer> mapcurtimes = null;
	@TarsStructProperty(order = 4, isRequire = false)
	public int itargetprocess = 0;
	@TarsStructProperty(order = 5, isRequire = false)
	public short ntasklvl = 0;

	public int getItaskid() {
		return itaskid;
	}

	public void setItaskid(int itaskid) {
		this.itaskid = itaskid;
	}

	public long getLaccepttime() {
		return laccepttime;
	}

	public void setLaccepttime(long laccepttime) {
		this.laccepttime = laccepttime;
	}

	public short getNtaskstate() {
		return ntaskstate;
	}

	public void setNtaskstate(short ntaskstate) {
		this.ntaskstate = ntaskstate;
	}

	public java.util.Map<java.lang.Integer, java.lang.Integer> getMapcurtimes() {
		return mapcurtimes;
	}

	public void setMapcurtimes(java.util.Map<java.lang.Integer, java.lang.Integer> mapcurtimes) {
		this.mapcurtimes = mapcurtimes;
	}

	public int getItargetprocess() {
		return itargetprocess;
	}

	public void setItargetprocess(int itargetprocess) {
		this.itargetprocess = itargetprocess;
	}

	public short getNtasklvl() {
		return ntasklvl;
	}

	public void setNtasklvl(short ntasklvl) {
		this.ntasklvl = ntasklvl;
	}

	public TTaskStatusDb() {
	}

	public TTaskStatusDb(int itaskid, long laccepttime, short ntaskstate, java.util.Map<java.lang.Integer, java.lang.Integer> mapcurtimes, int itargetprocess, short ntasklvl) {
		this.itaskid = itaskid;
		this.laccepttime = laccepttime;
		this.ntaskstate = ntaskstate;
		this.mapcurtimes = mapcurtimes;
		this.itargetprocess = itargetprocess;
		this.ntasklvl = ntasklvl;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(itaskid);
		result = prime * result + TarsUtil.hashCode(laccepttime);
		result = prime * result + TarsUtil.hashCode(ntaskstate);
		result = prime * result + TarsUtil.hashCode(mapcurtimes);
		result = prime * result + TarsUtil.hashCode(itargetprocess);
		result = prime * result + TarsUtil.hashCode(ntasklvl);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TTaskStatusDb)) {
			return false;
		}
		TTaskStatusDb other = (TTaskStatusDb) obj;
		return (
			TarsUtil.equals(itaskid, other.itaskid) &&
			TarsUtil.equals(laccepttime, other.laccepttime) &&
			TarsUtil.equals(ntaskstate, other.ntaskstate) &&
			TarsUtil.equals(mapcurtimes, other.mapcurtimes) &&
			TarsUtil.equals(itargetprocess, other.itargetprocess) &&
			TarsUtil.equals(ntasklvl, other.ntasklvl) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(itaskid, 0);
		_os.write(laccepttime, 1);
		_os.write(ntaskstate, 2);
		_os.write(mapcurtimes, 3);
		_os.write(itargetprocess, 4);
		_os.write(ntasklvl, 5);
	}

	static java.util.Map<java.lang.Integer, java.lang.Integer> cache_mapcurtimes;
	static { 
		cache_mapcurtimes = new java.util.HashMap<java.lang.Integer, java.lang.Integer>();
		int var_27 = 0;
		int var_28 = 0;
		cache_mapcurtimes.put(var_27 ,var_28);
	}

	public void readFrom(TarsInputStream _is) {
		this.itaskid = _is.read(itaskid, 0, true);
		this.laccepttime = _is.read(laccepttime, 1, true);
		this.ntaskstate = _is.read(ntaskstate, 2, true);
		this.mapcurtimes = (java.util.Map<java.lang.Integer, java.lang.Integer>) _is.read(cache_mapcurtimes, 3, true);
		this.itargetprocess = _is.read(itargetprocess, 4, false);
		this.ntasklvl = _is.read(ntasklvl, 5, false);
	}

}
