// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.account;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TFunctionNpc {

	@TarsStructProperty(order = 0, isRequire = false)
	public short ushnpcid = (short)0;
	@TarsStructProperty(order = 1, isRequire = false)
	public byte cstatus = (byte)0;
	@TarsStructProperty(order = 2, isRequire = false)
	public int ifriendprogress = 0;
	@TarsStructProperty(order = 3, isRequire = false)
	public short ilefttalkcount = (short)0;
	@TarsStructProperty(order = 4, isRequire = false)
	public long urecovertalktime = 0L;
	@TarsStructProperty(order = 5, isRequire = false)
	public int itaskid = 0;
	@TarsStructProperty(order = 6, isRequire = false)
	public int itaskdesireid = 0;
	@TarsStructProperty(order = 7, isRequire = false)
	public long ufinishtasktime = 0L;
	@TarsStructProperty(order = 8, isRequire = false)
	public long ufinishexporttime = 0L;

	public short getUshnpcid() {
		return ushnpcid;
	}

	public void setUshnpcid(short ushnpcid) {
		this.ushnpcid = ushnpcid;
	}

	public byte getCstatus() {
		return cstatus;
	}

	public void setCstatus(byte cstatus) {
		this.cstatus = cstatus;
	}

	public int getIfriendprogress() {
		return ifriendprogress;
	}

	public void setIfriendprogress(int ifriendprogress) {
		this.ifriendprogress = ifriendprogress;
	}

	public short getIlefttalkcount() {
		return ilefttalkcount;
	}

	public void setIlefttalkcount(short ilefttalkcount) {
		this.ilefttalkcount = ilefttalkcount;
	}

	public long getUrecovertalktime() {
		return urecovertalktime;
	}

	public void setUrecovertalktime(long urecovertalktime) {
		this.urecovertalktime = urecovertalktime;
	}

	public int getItaskid() {
		return itaskid;
	}

	public void setItaskid(int itaskid) {
		this.itaskid = itaskid;
	}

	public int getItaskdesireid() {
		return itaskdesireid;
	}

	public void setItaskdesireid(int itaskdesireid) {
		this.itaskdesireid = itaskdesireid;
	}

	public long getUfinishtasktime() {
		return ufinishtasktime;
	}

	public void setUfinishtasktime(long ufinishtasktime) {
		this.ufinishtasktime = ufinishtasktime;
	}

	public long getUfinishexporttime() {
		return ufinishexporttime;
	}

	public void setUfinishexporttime(long ufinishexporttime) {
		this.ufinishexporttime = ufinishexporttime;
	}

	public TFunctionNpc() {
	}

	public TFunctionNpc(short ushnpcid, byte cstatus, int ifriendprogress, short ilefttalkcount, long urecovertalktime, int itaskid, int itaskdesireid, long ufinishtasktime, long ufinishexporttime) {
		this.ushnpcid = ushnpcid;
		this.cstatus = cstatus;
		this.ifriendprogress = ifriendprogress;
		this.ilefttalkcount = ilefttalkcount;
		this.urecovertalktime = urecovertalktime;
		this.itaskid = itaskid;
		this.itaskdesireid = itaskdesireid;
		this.ufinishtasktime = ufinishtasktime;
		this.ufinishexporttime = ufinishexporttime;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(ushnpcid);
		result = prime * result + TarsUtil.hashCode(cstatus);
		result = prime * result + TarsUtil.hashCode(ifriendprogress);
		result = prime * result + TarsUtil.hashCode(ilefttalkcount);
		result = prime * result + TarsUtil.hashCode(urecovertalktime);
		result = prime * result + TarsUtil.hashCode(itaskid);
		result = prime * result + TarsUtil.hashCode(itaskdesireid);
		result = prime * result + TarsUtil.hashCode(ufinishtasktime);
		result = prime * result + TarsUtil.hashCode(ufinishexporttime);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TFunctionNpc)) {
			return false;
		}
		TFunctionNpc other = (TFunctionNpc) obj;
		return (
			TarsUtil.equals(ushnpcid, other.ushnpcid) &&
			TarsUtil.equals(cstatus, other.cstatus) &&
			TarsUtil.equals(ifriendprogress, other.ifriendprogress) &&
			TarsUtil.equals(ilefttalkcount, other.ilefttalkcount) &&
			TarsUtil.equals(urecovertalktime, other.urecovertalktime) &&
			TarsUtil.equals(itaskid, other.itaskid) &&
			TarsUtil.equals(itaskdesireid, other.itaskdesireid) &&
			TarsUtil.equals(ufinishtasktime, other.ufinishtasktime) &&
			TarsUtil.equals(ufinishexporttime, other.ufinishexporttime) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(ushnpcid, 0);
		_os.write(cstatus, 1);
		_os.write(ifriendprogress, 2);
		_os.write(ilefttalkcount, 3);
		_os.write(urecovertalktime, 4);
		_os.write(itaskid, 5);
		_os.write(itaskdesireid, 6);
		_os.write(ufinishtasktime, 7);
		_os.write(ufinishexporttime, 8);
	}


	public void readFrom(TarsInputStream _is) {
		this.ushnpcid = _is.read(ushnpcid, 0, false);
		this.cstatus = _is.read(cstatus, 1, false);
		this.ifriendprogress = _is.read(ifriendprogress, 2, false);
		this.ilefttalkcount = _is.read(ilefttalkcount, 3, false);
		this.urecovertalktime = _is.read(urecovertalktime, 4, false);
		this.itaskid = _is.read(itaskid, 5, false);
		this.itaskdesireid = _is.read(itaskdesireid, 6, false);
		this.ufinishtasktime = _is.read(ufinishtasktime, 7, false);
		this.ufinishexporttime = _is.read(ufinishexporttime, 8, false);
	}

}
