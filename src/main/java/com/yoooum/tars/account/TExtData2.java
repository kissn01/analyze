// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.account;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TExtData2 {

	@TarsStructProperty(order = 0, isRequire = false)
	public TRoleEventInfo stroleevent = null;
	@TarsStructProperty(order = 1, isRequire = false)
	public TCatEventInfo stcatevent = null;

	public TRoleEventInfo getStroleevent() {
		return stroleevent;
	}

	public void setStroleevent(TRoleEventInfo stroleevent) {
		this.stroleevent = stroleevent;
	}

	public TCatEventInfo getStcatevent() {
		return stcatevent;
	}

	public void setStcatevent(TCatEventInfo stcatevent) {
		this.stcatevent = stcatevent;
	}

	public TExtData2() {
	}

	public TExtData2(TRoleEventInfo stroleevent, TCatEventInfo stcatevent) {
		this.stroleevent = stroleevent;
		this.stcatevent = stcatevent;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(stroleevent);
		result = prime * result + TarsUtil.hashCode(stcatevent);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TExtData2)) {
			return false;
		}
		TExtData2 other = (TExtData2) obj;
		return (
			TarsUtil.equals(stroleevent, other.stroleevent) &&
			TarsUtil.equals(stcatevent, other.stcatevent) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		if (null != stroleevent) {
			_os.write(stroleevent, 0);
		}
		if (null != stcatevent) {
			_os.write(stcatevent, 1);
		}
	}

	static TRoleEventInfo cache_stroleevent;
	static { 
		cache_stroleevent = new TRoleEventInfo();
	}
	static TCatEventInfo cache_stcatevent;
	static { 
		cache_stcatevent = new TCatEventInfo();
	}

	public void readFrom(TarsInputStream _is) {
		this.stroleevent = (TRoleEventInfo) _is.read(cache_stroleevent, 0, false);
		this.stcatevent = (TCatEventInfo) _is.read(cache_stcatevent, 1, false);
	}

}
