// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.account;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TProduceBuildData {

	@TarsStructProperty(order = 0, isRequire = false)
	public java.util.List<TProduceData> vecproducedata = null;
	@TarsStructProperty(order = 1, isRequire = false)
	public java.util.List<TBackYardLogData> veclogdata = null;

	public java.util.List<TProduceData> getVecproducedata() {
		return vecproducedata;
	}

	public void setVecproducedata(java.util.List<TProduceData> vecproducedata) {
		this.vecproducedata = vecproducedata;
	}

	public java.util.List<TBackYardLogData> getVeclogdata() {
		return veclogdata;
	}

	public void setVeclogdata(java.util.List<TBackYardLogData> veclogdata) {
		this.veclogdata = veclogdata;
	}

	public TProduceBuildData() {
	}

	public TProduceBuildData(java.util.List<TProduceData> vecproducedata, java.util.List<TBackYardLogData> veclogdata) {
		this.vecproducedata = vecproducedata;
		this.veclogdata = veclogdata;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(vecproducedata);
		result = prime * result + TarsUtil.hashCode(veclogdata);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TProduceBuildData)) {
			return false;
		}
		TProduceBuildData other = (TProduceBuildData) obj;
		return (
			TarsUtil.equals(vecproducedata, other.vecproducedata) &&
			TarsUtil.equals(veclogdata, other.veclogdata) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		if (null != vecproducedata) {
			_os.write(vecproducedata, 0);
		}
		if (null != veclogdata) {
			_os.write(veclogdata, 1);
		}
	}

	static java.util.List<TProduceData> cache_vecproducedata;
	static { 
		cache_vecproducedata = new java.util.ArrayList<TProduceData>();
		TProduceData var_100 = new TProduceData();
		cache_vecproducedata.add(var_100);
	}
	static java.util.List<TBackYardLogData> cache_veclogdata;
	static { 
		cache_veclogdata = new java.util.ArrayList<TBackYardLogData>();
		TBackYardLogData var_101 = new TBackYardLogData();
		cache_veclogdata.add(var_101);
	}

	public void readFrom(TarsInputStream _is) {
		this.vecproducedata = (java.util.List<TProduceData>) _is.read(cache_vecproducedata, 0, false);
		this.veclogdata = (java.util.List<TBackYardLogData>) _is.read(cache_veclogdata, 1, false);
	}

}
