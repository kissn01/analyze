// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.account;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TSubWorkPlatDb {

	@TarsStructProperty(order = 0, isRequire = false)
	public int isubid = 0;
	@TarsStructProperty(order = 1, isRequire = false)
	public byte cworklistmaxcount = (byte)0;
	@TarsStructProperty(order = 2, isRequire = false)
	public long ulastproducttime = 0L;
	@TarsStructProperty(order = 3, isRequire = false)
	public java.util.List<TDBBagResource> veccontent = null;
	@TarsStructProperty(order = 4, isRequire = false)
	public java.util.List<TMakeWorkData> vecworklist = null;
	@TarsStructProperty(order = 5, isRequire = false)
	public java.util.List<TBackYardLogData> veclogdata = null;
	@TarsStructProperty(order = 6, isRequire = false)
	public byte cstatus = (byte)0;

	public int getIsubid() {
		return isubid;
	}

	public void setIsubid(int isubid) {
		this.isubid = isubid;
	}

	public byte getCworklistmaxcount() {
		return cworklistmaxcount;
	}

	public void setCworklistmaxcount(byte cworklistmaxcount) {
		this.cworklistmaxcount = cworklistmaxcount;
	}

	public long getUlastproducttime() {
		return ulastproducttime;
	}

	public void setUlastproducttime(long ulastproducttime) {
		this.ulastproducttime = ulastproducttime;
	}

	public java.util.List<TDBBagResource> getVeccontent() {
		return veccontent;
	}

	public void setVeccontent(java.util.List<TDBBagResource> veccontent) {
		this.veccontent = veccontent;
	}

	public java.util.List<TMakeWorkData> getVecworklist() {
		return vecworklist;
	}

	public void setVecworklist(java.util.List<TMakeWorkData> vecworklist) {
		this.vecworklist = vecworklist;
	}

	public java.util.List<TBackYardLogData> getVeclogdata() {
		return veclogdata;
	}

	public void setVeclogdata(java.util.List<TBackYardLogData> veclogdata) {
		this.veclogdata = veclogdata;
	}

	public byte getCstatus() {
		return cstatus;
	}

	public void setCstatus(byte cstatus) {
		this.cstatus = cstatus;
	}

	public TSubWorkPlatDb() {
	}

	public TSubWorkPlatDb(int isubid, byte cworklistmaxcount, long ulastproducttime, java.util.List<TDBBagResource> veccontent, java.util.List<TMakeWorkData> vecworklist, java.util.List<TBackYardLogData> veclogdata, byte cstatus) {
		this.isubid = isubid;
		this.cworklistmaxcount = cworklistmaxcount;
		this.ulastproducttime = ulastproducttime;
		this.veccontent = veccontent;
		this.vecworklist = vecworklist;
		this.veclogdata = veclogdata;
		this.cstatus = cstatus;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(isubid);
		result = prime * result + TarsUtil.hashCode(cworklistmaxcount);
		result = prime * result + TarsUtil.hashCode(ulastproducttime);
		result = prime * result + TarsUtil.hashCode(veccontent);
		result = prime * result + TarsUtil.hashCode(vecworklist);
		result = prime * result + TarsUtil.hashCode(veclogdata);
		result = prime * result + TarsUtil.hashCode(cstatus);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TSubWorkPlatDb)) {
			return false;
		}
		TSubWorkPlatDb other = (TSubWorkPlatDb) obj;
		return (
			TarsUtil.equals(isubid, other.isubid) &&
			TarsUtil.equals(cworklistmaxcount, other.cworklistmaxcount) &&
			TarsUtil.equals(ulastproducttime, other.ulastproducttime) &&
			TarsUtil.equals(veccontent, other.veccontent) &&
			TarsUtil.equals(vecworklist, other.vecworklist) &&
			TarsUtil.equals(veclogdata, other.veclogdata) &&
			TarsUtil.equals(cstatus, other.cstatus) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(isubid, 0);
		_os.write(cworklistmaxcount, 1);
		_os.write(ulastproducttime, 2);
		if (null != veccontent) {
			_os.write(veccontent, 3);
		}
		if (null != vecworklist) {
			_os.write(vecworklist, 4);
		}
		if (null != veclogdata) {
			_os.write(veclogdata, 5);
		}
		_os.write(cstatus, 6);
	}

	static java.util.List<TDBBagResource> cache_veccontent;
	static { 
		cache_veccontent = new java.util.ArrayList<TDBBagResource>();
		TDBBagResource var_76 = new TDBBagResource();
		cache_veccontent.add(var_76);
	}
	static java.util.List<TMakeWorkData> cache_vecworklist;
	static { 
		cache_vecworklist = new java.util.ArrayList<TMakeWorkData>();
		TMakeWorkData var_77 = new TMakeWorkData();
		cache_vecworklist.add(var_77);
	}
	static java.util.List<TBackYardLogData> cache_veclogdata;
	static { 
		cache_veclogdata = new java.util.ArrayList<TBackYardLogData>();
		TBackYardLogData var_78 = new TBackYardLogData();
		cache_veclogdata.add(var_78);
	}

	public void readFrom(TarsInputStream _is) {
		this.isubid = _is.read(isubid, 0, false);
		this.cworklistmaxcount = _is.read(cworklistmaxcount, 1, false);
		this.ulastproducttime = _is.read(ulastproducttime, 2, false);
		this.veccontent = (java.util.List<TDBBagResource>) _is.read(cache_veccontent, 3, false);
		this.vecworklist = (java.util.List<TMakeWorkData>) _is.read(cache_vecworklist, 4, false);
		this.veclogdata = (java.util.List<TBackYardLogData>) _is.read(cache_veclogdata, 5, false);
		this.cstatus = _is.read(cstatus, 6, false);
	}

}
