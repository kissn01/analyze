// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.account;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TDecoratedDb {

	@TarsStructProperty(order = 0, isRequire = false)
	public int ibuildingid = 0;
	@TarsStructProperty(order = 1, isRequire = false)
	public int iseq = 0;
	@TarsStructProperty(order = 2, isRequire = false)
	public int iposx = 0;
	@TarsStructProperty(order = 3, isRequire = false)
	public int iposy = 0;

	public int getIbuildingid() {
		return ibuildingid;
	}

	public void setIbuildingid(int ibuildingid) {
		this.ibuildingid = ibuildingid;
	}

	public int getIseq() {
		return iseq;
	}

	public void setIseq(int iseq) {
		this.iseq = iseq;
	}

	public int getIposx() {
		return iposx;
	}

	public void setIposx(int iposx) {
		this.iposx = iposx;
	}

	public int getIposy() {
		return iposy;
	}

	public void setIposy(int iposy) {
		this.iposy = iposy;
	}

	public TDecoratedDb() {
	}

	public TDecoratedDb(int ibuildingid, int iseq, int iposx, int iposy) {
		this.ibuildingid = ibuildingid;
		this.iseq = iseq;
		this.iposx = iposx;
		this.iposy = iposy;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(ibuildingid);
		result = prime * result + TarsUtil.hashCode(iseq);
		result = prime * result + TarsUtil.hashCode(iposx);
		result = prime * result + TarsUtil.hashCode(iposy);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TDecoratedDb)) {
			return false;
		}
		TDecoratedDb other = (TDecoratedDb) obj;
		return (
			TarsUtil.equals(ibuildingid, other.ibuildingid) &&
			TarsUtil.equals(iseq, other.iseq) &&
			TarsUtil.equals(iposx, other.iposx) &&
			TarsUtil.equals(iposy, other.iposy) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(ibuildingid, 0);
		_os.write(iseq, 1);
		_os.write(iposx, 2);
		_os.write(iposy, 3);
	}


	public void readFrom(TarsInputStream _is) {
		this.ibuildingid = _is.read(ibuildingid, 0, false);
		this.iseq = _is.read(iseq, 1, false);
		this.iposx = _is.read(iposx, 2, false);
		this.iposy = _is.read(iposy, 3, false);
	}

}
