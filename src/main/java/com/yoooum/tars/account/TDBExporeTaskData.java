// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.yoooum.tars.account;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TDBExporeTaskData {

	@TarsStructProperty(order = 0, isRequire = false)
	public long urefreshtask = 0;
	@TarsStructProperty(order = 1, isRequire = false)
	public java.util.Map<java.lang.Integer, TTaskStatusDb> mapdata = null;

	public long getUrefreshtask() {
		return urefreshtask;
	}

	public void setUrefreshtask(long urefreshtask) {
		this.urefreshtask = urefreshtask;
	}

	public java.util.Map<java.lang.Integer, TTaskStatusDb> getMapdata() {
		return mapdata;
	}

	public void setMapdata(java.util.Map<java.lang.Integer, TTaskStatusDb> mapdata) {
		this.mapdata = mapdata;
	}

	public TDBExporeTaskData() {
	}

	public TDBExporeTaskData(long urefreshtask, java.util.Map<java.lang.Integer, TTaskStatusDb> mapdata) {
		this.urefreshtask = urefreshtask;
		this.mapdata = mapdata;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(urefreshtask);
		result = prime * result + TarsUtil.hashCode(mapdata);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TDBExporeTaskData)) {
			return false;
		}
		TDBExporeTaskData other = (TDBExporeTaskData) obj;
		return (
			TarsUtil.equals(urefreshtask, other.urefreshtask) &&
			TarsUtil.equals(mapdata, other.mapdata) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(urefreshtask, 0);
		if (null != mapdata) {
			_os.write(mapdata, 1);
		}
	}

	static java.util.Map<java.lang.Integer, TTaskStatusDb> cache_mapdata;
	static { 
		cache_mapdata = new java.util.HashMap<java.lang.Integer, TTaskStatusDb>();
		int var_33 = 0;
		TTaskStatusDb var_34 = new TTaskStatusDb();
		cache_mapdata.put(var_33 ,var_34);
	}

	public void readFrom(TarsInputStream _is) {
		this.urefreshtask = _is.read(urefreshtask, 0, false);
		this.mapdata = (java.util.Map<java.lang.Integer, TTaskStatusDb>) _is.read(cache_mapdata, 1, false);
	}

}
